import logging
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from db import init_db, add_user

BOT_TOKEN = os.environ.get("BOT_TOKEN")  # ‚Üê –±–µ–∑–æ–ø–∞—Å–Ω–æ!

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    add_user(user.id, user.username, user.first_name)
    await update.message.reply_text(
        f"üëÅ –ü—Ä–∏–≤–µ—Ç, {user.first_name}.\n–¢—ã –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Elara.\n–í–≤–µ–¥–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π –∑–Ω–∞–∫."
    )

def main():
    init_db()
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    app.run_polling()

if __name__ == "__main__":
    main()

from telegram.ext import MessageHandler, filters
from datetime import datetime
from db import update_birthdate  # –º—ã —Å–µ–π—á–∞—Å –¥–æ–ø–∏—à–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    message = update.message.text.strip()

    # –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥–∞—Ç—É
    try:
        birthdate = datetime.strptime(message, "%d.%m.%Y").date()
        update_birthdate(user.id, birthdate.isoformat())
        await update.message.reply_text(
            f"üóì –ó–∞–ø–∏—Å–∞–ª–∞ —Ç–≤–æ—é –¥–∞—Ç—É: {birthdate.strftime('%d.%m.%Y')}.\nElara —É—Å–ª—ã—à–∞–ª–∞. –ó–∞–≤—Ç—Ä–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–Ω–∞–∫."
        )
    except ValueError:
        await update.message.reply_text("üò∂ –Ø –Ω–µ –ø–æ–Ω—è–ª–∞... –ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.")

